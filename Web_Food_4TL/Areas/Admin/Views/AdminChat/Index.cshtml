
<div class="main" id="content" style="background-color:#F6F6F6">
    <nav class="navbar navbar-expand px-4 py-3">
        <div class="navbar-collapse collapse">
            <ul class="navbar-nav justify-content-between" style="width: 1380px;">
                <li>
                    <h2 style="font-weight: bolder;">Quản lý tin nhắn</h2>
                </li>
                <li class="nav-item dropdown">
                    <button class="btn btn-secondary text-light dropdown-toggle d-none d-lg-block" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fa fa-user-circle"></i> @Context.Session.GetString("UserName")
                    </button>
                    <div class="dropdown-menu dropdown-menu-end rounded" style="width: 180px;">
                        <div class="d-flex">
                            <a class="ms-2 cusor" href="/Customer/Account/Logout" style="color: red;">Đăng xuất</a>
                        </div>
                    </div>
                </li>
            </ul>
        </div>
    </nav>
    <div class="row">
        <!-- Cột danh sách khách hàng -->
        <div class="col-md-4 mt-4">
            <div class="mx-3 p-2" style="background-color:white;border-radius:10px;height:538px">
                <div class="mx-3">
                    <h4 class="mt-3" style="font-weight:600;">Danh sách khách hàng</h4>
                    <ul class="list-group scroll-contents" id="userList">
                        <!-- Danh sách user sẽ render tại đây -->
                    </ul>
                </div>
            </div>
      
        </div>

        <!-- Cột nội dung chat -->
        <div class="col-md-8 mt-4">
            <div class="me-5 p-2" style="background-color:white;border-radius:10px;">
                <div class="m-3">
                    <h4 id="chatWithTitle" style="font-weight:600">Chat với: <span id="currentUserName" style="color:black">Chưa chọn</span></h4>

                    <div class="border p-3 mb-3" style="height: 400px; overflow-y: auto; width:750px;background-color:white;border-radius:10px;" id="chatBox">
                        <!-- Tin nhắn sẽ render tại đây -->
                    </div>

                    <div class="input-group" style="width:750px">
                        <input type="text" class="form-control" placeholder="Nhập tin nhắn..." id="messageInput" />
                        <button class="btn btn-primary" id="sendBtn" disabled>Gửi</button>
                    </div>
                </div>
            </div>
            
        </div>
    </div>
</div>
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>
    let selectedUserId = null;

    // Tải danh sách người dùng
    function loadUsers() {
        $.get("/admin/api/chat/users", function (data) {
            const userList = $("#userList");
            userList.empty();

            data.forEach(user => {
                const redDot = user.soLuongTinMoi > 0
                    ? `<span class="badge bg-danger ms-2">${user.soLuongTinMoi}</span>`
                    : "";

                const li = $(`
                    <li class="list-group-item list-group-item-action mt-2 mb-2 d-flex justify-content-between align-items-center"
                        style="cursor:pointer;border-radius:10px;background-color:#0e2238;width:100%;color:white">
                        <span>${user.tenNguoiDung}${redDot}</span>
                    </li>
                `);

                li.click(() => {
                    selectedUserId = user.nguoiDungId;
                    loadMessages(user.nguoiDungId, user.tenNguoiDung);
                    markAsRead(user.nguoiDungId);
                });

                userList.append(li);
            });
        });
    }

    // Đánh dấu đã đọc tin nhắn từ người dùng
    function markAsRead(userId) {
        $.post(`/admin/api/chat/mark-read/${userId}`, function () {
            loadUsers();
        });
    }

    // Tải tin nhắn giữa admin và người dùng
    function loadMessages(userId, userName) {
        $("#currentUserName").text(userName);
        $("#sendBtn").prop('disabled', false);

        $.get(`/admin/api/chat/messages/${userId}`, function (data) {
            const chatBox = $("#chatBox");
            chatBox.empty();

            data.messages.forEach(msg => {
                const messageClass = msg.laTinNhanTuKhach ? "text-start" : "text-end";
                const messageBg = msg.laTinNhanTuKhach ? "bg-light" : "bg-primary text-white";

                const message = $(`
                    <div class="mb-2 ${messageClass}">
                        <span class="p-2 rounded ${messageBg} d-inline-block">
                            ${msg.noiDung}
                        </span>
                    </div>
                `);

                chatBox.append(message);
            });

            chatBox.scrollTop(chatBox[0].scrollHeight);
        });
    }

    // Gửi tin nhắn từ admin đến người dùng
    $("#sendBtn").click(function () {
        const messageText = $("#messageInput").val().trim();
        if (!messageText || selectedUserId === null) return;

        $.ajax({
            url: "/admin/api/chat/send/customer",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify({
                nguoiDungId: selectedUserId,
                messageText: messageText
            }),
            success: function () {
                $("#messageInput").val("");
                loadMessages(selectedUserId, $("#currentUserName").text());
                loadUsers(); // cập nhật danh sách (đưa user lên đầu, ẩn chấm đỏ)
            },
            error: function () {
                alert("Gửi tin nhắn thất bại!");
            }
        });
    });

    // Gửi khi nhấn Enter
    $("#messageInput").keypress(function (e) {
        if (e.which === 13) {
            $("#sendBtn").click();
        }
    });

    // Tải danh sách ban đầu và thiết lập polling mỗi 5s
    $(document).ready(function () {
        loadUsers();

        setInterval(() => {
            loadUsers();
        }, 5000);
    });
</script>

}

